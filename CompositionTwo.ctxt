#BlueJ class context
comment0.target=CompositionTwo
comment0.text=\r\n\ Program\ takes\ a\ .txt\ file\ as\ a\ dictionary\ of\ words\ and\ checks\ if\ any\ of\ those\ words\ can\ be\ broken\ into\ three\r\n\ or\ more\ words.\ \r\n\r\n\ @author\ Samuel\ Ayoade,\ Keith\ Thoong\r\n\ @version\ 4/24/2022\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ method\ for\ initiating\ the\ check\r\n\ \r\n
comment2.params=dictionary
comment2.target=java.lang.String[]\ fillArray(java.lang.String[])
comment2.text=\r\n\ Fills\ an\ array\ with\ the\ words\ from\ a\ .txt\ file\r\n\ \r\n\ @param\ dictionary\ the\ array\ to\ be\ filled\r\n\ @return\ the\ array\ filled\ with\ words\ from\ the\ .txt\ file\r\n
comment3.params=dictionary\ concatenatedWords\ word\ subWord\ fullWord\ wordCount\ fout
comment3.target=void\ checkWord(java.lang.String[],\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ java.io.PrintWriter)
comment3.text=\r\n\ Checks\ to\ see\ if\ a\ word\ can\ be\ broken\ into\ 3\ or\ more\ words\r\n\ \r\n\ @param\ dictionary\ the\ array\ to\ reference\ all\ words\r\n\ @param\ concatenatedWords\ a\ String\ of\ subwords\ that\ the\ word\ can\ be\ broken\ into\r\n\ @param\ word\ the\ word\ to\ check\r\n\ @param\ subWord\ a\ string\ of\ parts\ of\ the\ full\ word\ to\ be\ checked\ as\ a\ valid\ word\r\n\ @param\ fullWord\ the\ full\ word\ being\ cheked\r\n\ @param\ wordCount\ the\ number\ of\ subwords\ that\ have\ been\ found\r\n\ @param\ fout\ the\ PrintWriter\ to\ write\ to\ the\ file.\r\n
comment4.params=dictionary\ fout
comment4.target=void\ checkAll(java.lang.String[],\ java.io.PrintWriter)
comment4.text=\r\n\ Checks\ all\ the\ words\ in\ the\ .txt\ file\ to\ see\ if\ it\ can\ be\ broken\ up\r\n\ \r\n\ @param\ dictionary\ the\ array\ of\ words\ to\ be\ checked\r\n\ @param\ fout\ the\ PrintWriter\ to\ write\ to\ the\ file\r\n
numComments=5
